# quarkus configuration
quarkus.log.level=${ROOT_LOG_LEVEL:INFO}
quarkus.log.category."org.folio.sidecar".level=${SC_LOG_LEVEL:INFO}
quarkus.application.name=folio-module-sidecar
quarkus.http.port=8081
quarkus.jackson.fail-on-unknown-properties=false
quarkus.jackson.serialization-inclusion=non_null
quarkus.smallrye-health.root-path=/admin/health
quarkus.kafka.health.enabled=true
quarkus.security.security-providers=BCFIPS
# Logging
# quarkus.log.category."org.apache.kafka.clients".level=INFO
# Application manager configuration
am.url=${AM_CLIENT_URL:http://mgr-applications:8081}
# Tenant entitlement configuration
te.url=${TE_CLIENT_URL:http://mgr-tenant-entitlements:8081}
te.batchSize=${TE_CLIENT_BATCH_SIZE:500}
# Tenant manager configuration
tm.url=${TM_CLIENT_URL:http://mgr-tenants:8081}
tm.batchSize=${TM_BATCH_SIZE:50}
# sidecar's module configuration
module.name=${MODULE_NAME}
module.version=${MODULE_VERSION}
module.id=${module.name}-${module.version}
module.url=${MODULE_URL:http://localhost:8081}
module.health-path=${MODULE_HEALTH_PATH:/admin/health}
# sidecar configuration
sidecar.name=${SIDECAR_NAME:sc-${MODULE_NAME}}
sidecar.url=${SIDECAR_URL}
sidecar.module-path-prefix.enabled=${SIDECAR_MODULE_PATH_PREFIX_ENABLED:false}
sidecar.forward-unknown-requests=${SIDECAR_FORWARD_UNKNOWN_REQUESTS:false}
sidecar.forward-unknown-requests.destination=${SIDECAR_FORWARD_UNKNOWN_REQUESTS_DESTINATION:http://api-gateway:8000}
sidecar.cross-tenant.enabled=${ALLOW_CROSS_TENANT_REQUESTS:false}
# keycloak configuration
keycloak.url=${KC_URL:http://keycloak:8080}
keycloak.login.client-suffix=${KC_LOGIN_CLIENT_SUFFIX:-login-application}
keycloak.admin.client-id=${KC_ADMIN_CLIENT_ID:folio-backend-admin-client}
keycloak.service.client-id=${KC_SERVICE_CLIENT_ID:sidecar-module-access-client}
keycloak.impersonation-client=${SIDECAR_IMPERSONATION_CLIENT_NAME:impersonation-client}
keycloak.authorization-cache-max-size=${KC_AUTHORIZATION_CACHE_MAX_SIZE:50}
keycloak.authorization-cache-ttl-offset=${KC_AUTHORIZATION_CACHE_TTL_OFFSET:5000}
# mod-users configuration
mod-users-keycloak.url=${MOD_USERS_KEYCLOAK_URL:http://mod-users-keycloak:8081}
mod-users-keycloak.cache-expiration-seconds=${MOD_USERS_KEYCLOAK_CACHE_EXPIRATION_SECONDS:300}
mod-users-keycloak.cache-initial-capacity=${MOD_USERS_KEYCLOAK_CACHE_INITIAL_CAPACITY:50}
mod-users-keycloak.cache-max-capacity=${MOD_USERS_KEYCLOAK_CACHE_MAX_CAPACITY:1000}
# retry configuration
retry.attempts=${RETRY_ATTEMPTS:10}
retry.min-delay=${RETRY_MIN_DELAY:5s}
retry.max-delay=${RETRY_MAX_DELAY:2m}
retry.back-off-factor=${RETRY_BACKOFF_FACTOR:2}
# Token caches configuration
token-cache.capacity.initial=${TOKEN_CACHE_INITIAL_CAPACITY:10}
token-cache.capacity.max=${TOKEN_CACHE_MAX_CAPACITY:50}
token-cache.refresh-before-expiry-sec=${TOKEN_CACHE_REFRESH_PRIOR_EXPIRATION:25}
# secret store configuration
secret-store.type=${SECRET_STORE_TYPE:}
# AWS secret store configuration
secret-store.aws-ssm.region=${SECRET_STORE_AWS_SSM_REGION:}
secret-store.aws-ssm.use-iam=${SECRET_STORE_AWS_SSM_USE_IAM:true}
secret-store.aws-ssm.ecs-credentials-endpoint=${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_ENDPOINT:}
secret-store.aws-ssm.ecs-credentials-path=${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_PATH:}
# Vault secret store configuration
secret-store.vault.token=${SECRET_STORE_VAULT_TOKEN:}
secret-store.vault.address=${SECRET_STORE_VAULT_ADDRESS:}
secret-store.vault.enable-ssl=${SECRET_STORE_VAULT_ENABLE_SSL:false}
secret-store.vault.pem-file-path=${SECRET_STORE_VAULT_PEM_FILE_PATH:}
secret-store.vault.keystore-password=${SECRET_STORE_VAULT_KEYSTORE_PASSWORD:}
secret-store.vault.keystore-file-path=${SECRET_STORE_VAULT_KEYSTORE_FILE_PATH:}
secret-store.vault.truststore-file-path=${SECRET_STORE_VAULT_TRUSTSTORE_FILE_PATH:}
%dev.quarkus.log.category."io.smallrye.faulttolerance".level=DEBUG
# Kafka configuration
#quarkus.kafka.devservices.enabled=false
%prod.kafka.bootstrap.servers=${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
%dev.kafka.bootstrap.servers=${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
kafka.group.id=${sidecar.name}_${quarkus.uuid}
mp.messaging.incoming.discovery.connector=smallrye-kafka
mp.messaging.incoming.discovery.topic=${ENV:folio}.discovery
mp.messaging.incoming.entitlement.connector=smallrye-kafka
mp.messaging.incoming.entitlement.topic=${ENV:folio}.entitlement
# web client configuration
http.request.timeout=${REQUEST_TIMEOUT:60000}
