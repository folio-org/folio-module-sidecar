####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
# It uses a micro base image, tuned for Quarkus native executables.
# It reduces the size of the resulting container image.
# Check https://quarkus.io/guides/quarkus-runtime-base-image for further information about this image.
#
# This version uses a multi-stage build to ensure GLIBC compatibility
#
# Build the image with:
#
# docker build -f docker/Dockerfile.native-micro -t folio-module-sidecar-native .
#
# Then run the container using:
#
# docker run -i --rm -p 8081:8081 folio-module-sidecar-native
#
###

# Build stage - use the same base as runtime to ensure GLIBC compatibility
FROM registry.access.redhat.com/ubi9/ubi-minimal:9.4 as builder

# Install required packages for native build
RUN microdnf install -y gzip tar unzip which \
    && microdnf clean all

# Install GraalVM
ENV GRAALVM_VERSION=21.0.5
ENV GRAALVM_ARCH=linux-x64
RUN curl -L "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-${GRAALVM_VERSION}/graalvm-community-jdk-${GRAALVM_VERSION}_${GRAALVM_ARCH}_bin.tar.gz" | tar -xz -C /opt \
    && mv /opt/graalvm-community-openjdk-${GRAALVM_VERSION}* /opt/graalvm

ENV JAVA_HOME=/opt/graalvm
ENV PATH=$JAVA_HOME/bin:$PATH

# Install Maven
ENV MAVEN_VERSION=3.9.9
RUN curl -L "https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz" | tar -xz -C /opt \
    && mv /opt/apache-maven-${MAVEN_VERSION} /opt/maven

ENV MAVEN_HOME=/opt/maven
ENV PATH=$MAVEN_HOME/bin:$PATH

# Copy source code
COPY . /build
WORKDIR /build

# Build native executable
RUN ./mvnw clean package -Dnative -DskipTests

# Runtime stage
FROM registry.access.redhat.com/ubi9/ubi-minimal:9.4
WORKDIR /work/
RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
COPY --from=builder --chown=1001:root /build/target/*-runner /work/application

EXPOSE 8081
USER 1001

ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
