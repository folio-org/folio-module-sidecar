####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
# It uses a micro base image, tuned for Quarkus native executables.
# It reduces the size of the resulting container image.
# Check https://quarkus.io/guides/quarkus-runtime-base-image for further information about this image.
#
# This version uses a multi-stage build to ensure GLIBC compatibility
#
# Build the image with:
#
# docker build -f docker/Dockerfile.native-micro -t folio-module-sidecar-native .
#
# Then run the container using:
#
# docker run -i --rm -p 8081:8081 folio-module-sidecar-native
#
###

# Build stage - use UBI with development tools
FROM registry.access.redhat.com/ubi9/ubi:9.4 as builder

# Install build tools
RUN dnf install -y java-21-openjdk-devel maven gcc zlib-devel \
    && dnf clean all

# Set JAVA_HOME
ENV JAVA_HOME=/usr/lib/jvm/java-21-openjdk

# Copy source code
COPY . /build
WORKDIR /build

# Build native executable
RUN ./mvnw clean package -Dnative -DskipTests

# Runtime stage
FROM registry.access.redhat.com/ubi9/ubi-minimal:9.4
WORKDIR /work/
RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
COPY --from=builder --chown=1001:root /build/target/*-runner /work/application

EXPOSE 8081
USER 1001

ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
